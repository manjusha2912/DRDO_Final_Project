Unnamed: 0,Sentence,Label
0,const bcrypt = require('bcryptjs');,
1,const express = require('express');,
2,const bodyParser = require('body-parser');,
3,const cookieParser = require('cookie-parser');,
4,const db = require('./db');,
5,const app = express();,
6,"app.use(express.static('docs', {",
7,extensions: ['js'] ,
8,}));,
9,const PORT = 3000;,
10,app.use(bodyParser.json());,
11,app.use(bodyParser.urlencoded({ extended: true }));,
12,app.use(cookieParser());,
13,app.use(express.static('docs'));,
14,"app.post('/register', (req, res) => {",
15,"const { username, password } = req.body;",
16,"const hashedPassword = bcrypt.hashSync(password, 10);",
17,"const sql = 'INSERT INTO users (username, password) VALUES (?, ?)';",
18,"db.query(sql, [username, hashedPassword], (err, result) => {",
19,if (err) throw err;,
20,res.redirect('/login.html');,
21,});,
22,});,
23,"app.post('/login', (req, res) => {",
24,"const { username, password } = req.body;",
25,u1=http://cyber-unity.com&m1=%3Cscript%3Eale<br/>rt(document.cookie)%3C/script%3E&m2=%3Ch1%3ECyber-Unity%3C/h1%3E&m3=by%20s3aL&m4=%3Ch1%3ESystem%20By<br/>%20XSSED!%3C/h1%3E,
26,"db.query(sql, [username], (err, results) => {",
27,if (err) throw err;,
28,"if (results.length > 0 && bcrypt.compareSync(password, results[0].password)) {",
29,"res.cookie('user_id', results[0].id);",
30,res.redirect('/dashboard.html');,
31,} else {,
32,res.send('Invalid credentials');,
33,},
34,});,
35,});,
36,"app.post('/post', (req, res) => {",
37,"const { title, content, allowedUsers } = req.body;",
38,const userId = req.cookies.user_id;,
39,"const allowedUsersString = Array.isArray(allowedUsers) ? allowedUsers.join(',') : allowedUsers;",
40,"const sql = 'INSERT INTO posts (user_id, title, content, allowed_users) VALUES (?, ?, ?, ?)';",
41,"db.query(sql, [userId, title, content, allowedUsersString], (err, result) => {",
42,if (err) throw err;,
43,res.redirect('/dashboard.html');,
44,msg=%3Cscript%3Ealert(%22by%20s3aL%20||Cyber-U<br/>nity.Com%22)%3C/script%3E,
45,});,
46,"app.get('/posts', (req, res) => {",
47,const userId = req.cookies.user_id;,
48,select  ( case when  ( 7645 = 5921 )  then 7645 else 7645* ( select 7645 from information_schema.character_sets )  end ) #,
49,"db.query(sql, [userId], (err, results) => {",
50,if (err) {,
51,"console.error('Error fetching posts:', err);",
52,return res.status(500).json({ error: 'Error fetching posts' });,
53,},
54,res.json(results);,
55,"select count ( * )  from generate_series ( 1,5000000 )  and  ( ""jzmg"" = ""jzmg",
56,});,
57,"app.listen(PORT, () => {",
58,console.log(`Server running on http://localhost:${PORT}`);,
59,});,
60,const mysql = require('mysql');,
61,const connection = mysql.createConnection({,
62,"host: '127.0.0.1',",
63,"user: 'root',",
64,"password: 'SQL_Entry2003',",
65,database: 'offline_forum',
66,});,
67,connection.connect((err) => {,
68,if (err) throw err;,
69,console.log('Connected to MySQL');,
70,});,
71,module.exports = connection;,
72,<!DOCTYPE html>,
73,"<html lang=""en"">",
74,<head>,
75,"<meta charset=""UTF-8"">",
76,"<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">",
77,<title>Register</title>,
78,"<link rel=""stylesheet"" href=""styles.css"">",
79,</head>,
80,<body>,
81,<h1>Register</h1>,
82,"<form action=""/register"" method=""POST"">",
83,"<input type=""text"" name=""username"" placeholder=""Username"" required>",
84,"<input type=""password"" name=""password"" placeholder=""Password"" required>",
85,"<button type=""submit"">Register</button>",
86,</form>,
87,"<a href=""index.html"">Home</a>",
88,</body>,
89,</html>,
90,<!DOCTYPE html>,
91,"<html lang=""en"">",
92,<head>,
93,"<meta charset=""UTF-8"">",
94,"<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">",
95,<title>Login</title>,
96,"<link rel=""stylesheet"" href=""styles.css"">",
97,</head>,
98,<body>,
99,<h1>Login</h1>,
100,"<form action=""/login"" method=""POST"">",
101,"<input type=""text"" name=""username"" placeholder=""Username"" required style=""margin: 10px;"">",
102,"<input type=""password"" name=""password"" placeholder=""Password"" required style=""margin: 10px;"">",
103,"<button type=""submit"">Login</button>",
104,</form>,
105,"<a href=""index.html"">Home</a>",
106,</body>,
107,</html>,
108,<!DOCTYPE html>,
109,<html>,
110,<head>,
111,<title>Offline Forum</title>,
112,"<meta http-equiv=""content-type"" content=""text/html; charset=ISO-8859-1"" />",
113,"<link type=""text/css"" rel=""stylesheet"" href=""styles.css"" media=""screen,projection"" />",
114,</head>,
115,<body>,
116,"<div id=""container"">",
117,"<div id=""sitetitle"">",
118,"<h1><a href=""#"">Offline Forum</a></h1>",
119,<h2>Discussion Platform</h2>,
120,</div>,
121,"<div id=""menu""> ",
122,"<a href=""index.html"">Home</a> ",
123,"<a href=""login.html"">Login</a> ",
124,"<a href=""register.html"">Register</a>",
125,</div>,
126,"<div id=""content"">",
127,"<div id=""left"">",
128,"<div class=""entry"">",
129,<h2>Welcome to Offline Forum</h2>,
130,<p>This is an offline discussion forum platform where you can post content and choose which users can access your posts. Please log in or register to get started.</p>,
131,</div>,
132,</div>,
133,</div>,
134,"<div id=""footer"">",
135,<span>Offline Forum</span><br />,
136,"&copy; SAG, DRDO 2024",
137,</div>,
138,</div>,
139,</body>,
140,</html>,
141,<!DOCTYPE html>,
142,"<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"">",
143,<head>,
144,<title>Dashboard - Offline Forum</title>,
145,"<meta http-equiv=""content-type"" content=""text/html; charset=ISO-8859-1"" />",
146,"<link type=""text/css"" rel=""stylesheet"" href=""styles.css"" media=""screen,projection"" />",
147,</head>,
148,<body>,
149,"<div id=""container"">",
150,"<div id=""sitetitle"">",
151,<h1>Offline Forum</h1>,
152,<h2>Discussion Platform</h2>,
153,</div>,
154,"<div id=""menu"">",
155,"<a href=""index.html"">Log Out</a> ",
156,"<a href=""dashboard.html"">Refresh Dashboard</a>",
157,</div>,
158,"<div id=""content"">",
159,"<div id=""left"">",
160,"<div class=""entry"">",
161,<h2>Your Dashboard</h2>,
162,<p>Welcome to your dashboard. Here you can manage your posts and view recent activities</p>,
163,</div>,
164,"<div class=""entry"">",
165,<h3>Publish a Post</h3>,
166,"<form id=""publish-post-form"" action=""/post"" method=""POST"">",
167,"<label for=""post-title"">Title:</label>",
168,"<input type=""text"" id=""post-title"" name=""title"" required>",
169,"<label for=""post-content"" style=""margin-top: 10px;"">Content:</label>",
170,"<textarea id=""post-content"" name=""content"" required></textarea>",
171,"<label for=""allowed-users"" style=""margin: 5px;"">Allowed Users (comma-separated list):</label>",
172,"<input type=""text"" id=""allowed-users"" name=""allowedUsers"" required>",
173,"<div class=""button-container"">",
174,"<button type=""submit"">Publish</button>",
175,</div>,
176,</form>,
177,</div>,
178,"<div class=""entry"">",
179,<h2>Your Posts</h2>,
180,"<div id=""user-posts"" action=""/posts"" method=""POST"">",
181,</div>,
182,</div>,
183,</div>,
184,"<div id=""footer"">",
185,<span>Offline Forum</span><br />,
186,"&copy; 2024 SAG, DRDO | <a href=""index.html"">Logout</a> | ",
187,</div>,
188,</div>,
189,<script>,
190,fetch('/posts'),
191,.then(response => response.json()),
192,.then(data => {,
193,"console.log('Fetched posts:', data); // Log fetched data",
194,const userPosts = document.getElementById('user-posts');,
195,userPosts.innerHTML = ''; // Clear previous posts,
196,data.forEach(post => {,
197,const postElement = document.createElement('div');,
198,postElement.textContent = `${post.title}: ${post.content}`;,
199,userPosts.appendChild(postElement);,
200,});,
201,}),
202,.catch(error => {,
203,"console.error('Error fetching posts:', error);",
204,});,
205,</script>,
206,</body>,
207,</html>,
